[{"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/index.js":"1","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/App.js":"2","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/reportWebVitals.js":"3","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/Form.js":"4","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/List.js":"5","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/MainPage.js":"6","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/contexts/ToDoContext.js":"7","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/Todo.js":"8","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/Datetime.js":"9"},{"size":500,"mtime":1610094848565,"results":"10","hashOfConfig":"11"},{"size":430,"mtime":1610107216329,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610094848566,"results":"13","hashOfConfig":"11"},{"size":867,"mtime":1610103341832,"results":"14","hashOfConfig":"11"},{"size":543,"mtime":1610105957512,"results":"15","hashOfConfig":"11"},{"size":220,"mtime":1610105177361,"results":"16","hashOfConfig":"11"},{"size":2708,"mtime":1610107194783,"results":"17","hashOfConfig":"11"},{"size":761,"mtime":1610105965228,"results":"18","hashOfConfig":"11"},{"size":360,"mtime":1610110664922,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15wjtro",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/index.js",[],["40","41"],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/App.js",[],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/reportWebVitals.js",[],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/Form.js",[],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/List.js",[],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/MainPage.js",[],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/contexts/ToDoContext.js",["42"],"import React, {useContext, useEffect, useState} from 'react';\nimport {toaster} from 'evergreen-ui';\n\nconst ToDoContext = React.createContext();\n\nexport function ToDoList() {\n    return useContext(ToDoContext)\n}\n\nexport function ToDoProvider({ children }) {\n\n    const [inputText, setInputText] = useState('');\n    const [toDo, setTodos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filteredToDos, setFilteredToDos] = useState([]);\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    }\n\n    const filterHandler = () => {\n        switch(status) {\n            case 'completed':\n                setFilteredToDos(toDo.filter(todo => todo.completed === true))\n                break;\n            case 'uncompleted':\n                setFilteredToDos(toDo.filter(todo => todo.completed === false))\n                break;\n            default:\n                setFilteredToDos(toDo);\n                break;\n\n        }\n    }\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n\n    const completeHandler = (id) => {\n    \n       setTodos(toDo.map(item => {\n           if(item.id === id) {\n                toaster.success('Great job! Keep finishing up these tasks!')\n               return {\n                   ...item, completed: !item.completed\n               }\n           }\n           return item;\n           \n       }))\n       \n    }\n\n    const trashHandler = (removeId) => {\n        setTodos(toDo.filter((el) => el.id !== removeId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        setTodos([\n            ...toDo, {text: inputText, completed: false, id: Math.random() *1000}\n        ])\n        setInputText('')\n        \n    } \n\n    const saveLocalTodos = () => {\n            localStorage.setItem('todos', JSON.stringify(toDo))\n    }\n\n    const getLocalTodos = () => {\n        if(localStorage.getItem('todos') === null ) {\n            localStorage.setItem('todos', JSON.stringify([]))\n        } else {\n            let todoLocal = JSON.parse(localStorage.getItem('todos'))\n            setTodos(todoLocal)\n        }\n    }\n    //Run once when the app starts\n    useEffect(() => {\n        getLocalTodos();\n    }, [])\n   \n    \n    useEffect(() => {\n        filterHandler();\n        saveLocalTodos();\n    }, [toDo, status])\n    \n    const value = {\n        toDo,\n        inputText,\n        submitHandler, \n        inputTextHandler, \n        trashHandler,\n        completeHandler,\n        status, \n        setStatus,\n        statusHandler,\n        filterHandler,\n        filteredToDos\n    }\n\n    return (\n        <ToDoContext.Provider value={value}>\n            {children}\n        </ToDoContext.Provider>\n    )\n\n}","/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/Todo.js",[],"/Users/tehreemnihar/Downloads/TaskManager/task-manager/src/components/Datetime.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":89,"column":8,"nodeType":"49","endLine":89,"endColumn":22,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [toDo, status, filterHandler, saveLocalTodos]",{"range":"56","text":"57"},[2304,2318],"[toDo, status, filterHandler, saveLocalTodos]"]